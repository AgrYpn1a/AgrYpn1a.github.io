[{"id":0,"href":"/docs/math/algebra/","title":"Algebra","section":"Math","content":"Algebra #  "},{"id":1,"href":"/docs/programming/setup/","title":"Setup","section":"Programming","content":"Setup #  In this section we are going to setup our programming environment. As this course is written for C# there will be two ways to follow it. If you\u0026rsquo;re on Windows this setup will be pretty straightforward using Visual Studio Community, otherwise you will have to follow a different kind of setup using a .NET Core which is compatible accross different platforms such as Linux or MacOS.\n"},{"id":2,"href":"/docs/problems/advanced/arrays/","title":"Arrays","section":"Advanced","content":"Arrays #  This practice assumes that you have completed the beginner array practice. We are going to write a class that is like a library that allows us to work with arrays in a very useful way.\nIn this practice, we are going to assume that you are familiar with some basics of functional programming, as our approach to solving the problems given here will be functional-oriented. This means that do NOT want to modify the given inputs in any way, and always instead return the modified input from the function. This also means no void-type functions anymore. All functions (methods) will be static.\nSo let\u0026rsquo;s begin by jumping right into it, and write the first useful method that copies the array and returns that copy.\n Note: we will assume that our methods work with integers only for the sake of simplicity.\n [1.0a] Write a new class called CSArrays and in it write a static method called Copy that takes an array and creates a new one that is an exact copy of the given array. Method should return the newly created array copy.\n[1.0b] Now let\u0026rsquo;s extend this with another utility like method taht is generally useful. Write a static method Reverse that takes an array of integers and returns new array that is a reverse of the original.\n[1, 2, 3] -\u0026gt; [3, 2, 1] [1] -\u0026gt; [1]   Note: we will assume that all methods work on copies of the input array. So use the Copy method that you have first written.\n You do not need to make copies of the arrays that you are not going to modify. So for read operations such as TakeFirst and similar, you do not need to make copies first, this should be obvious at this point.\n   [1.1] Write a static method called TakeFirst that returns the first element of the array.\n[ 13, 5, 6, 12, 5 ] -\u0026gt; 13 [1.2] Write a static method called TakeLast that returns the last element of the array.\n[ 13, 5, 6, 12, 5 ] -\u0026gt; 5 Now let us make things more complex.\n[1.3] Write a static method called TakeFirstN that takes an array and an integer n and returns the array with first n elements of the original array. Make sure to test against edge cases (they will be written as examples below).\n([], 2) -\u0026gt; [] ([2, 3, 6], 0) -\u0026gt; [] ([1, 2], 5) -\u0026gt; [1, 2] ([1, 2, 3], -1) -\u0026gt; [] // ERR: n cannot be negative ([13, 2, 6, 14, 15], 3) -\u0026gt; [13, 2, 6] [1.4] Write a static method called TakeLastN that takes an array and an integer n and returns the array with last n elements of the original array. Make sure to test against edge cases (they will be written as examples below).\n([], 2) -\u0026gt; [] ([2, 3, 6], 0) -\u0026gt; [] ([1, 2], 5) -\u0026gt; [1, 2] ([1, 2, 3], -1) -\u0026gt; [] // ERR: n cannot be negative ([13, 2, 6, 14, 15], 3) -\u0026gt; [6, 14, 15] [1.5] Write a static method called TakeEverySecond that takes an array of integers and returns new array that contains every second element of the original array, starting with index 0 as first element.\n[] -\u0026gt; [] [1] -\u0026gt; [1] [1, 2] -\u0026gt; [1] [1, 2, 3, 4] -\u0026gt; [1, 3] [1, 2, 3, 4, 5] -\u0026gt; [1, 3, 5] [1.5] Write a static method called TakeEveryNth that takes an array of integers and an integer n and returns new array that contains every n-th element of the original array, starting with index 0 as first element.\n([], 2) -\u0026gt; [] ([1], 2) -\u0026gt; [1] ([1, 2], 3) -\u0026gt; [1] ([1, 2, 3, 4], 3) -\u0026gt; [1, 4] ([1, 2, 3, 4, 5, 6, 7, 8] , 3) -\u0026gt; [1, 4, 7] At this point we are going to start writing some functions that are often used in functional paradigm. Many of the todays languages are functional or have a functional oriented extension. In web development we work with collections of data a lot, and we often use these functions, without maybe realising that this is a completely different paradigm. In order to use these well, we need to understand how they work first. In this practice we will stick with the more simpler approach and enter the functional world step by step. In the expert arrays practice, we will implement this using higher-order functions, but for now we will work with specific cases and you will have to copy the same code all over again. This should also make you question this approach, and make you wonder if there is a way to reuse some parts of the code. When you are ready, proceed to the expert practice to see how this is really done.\n[2.1] In the previously defined CSArrays class, write a static method called FilterPositive that takes an array of integers and returns new array that consists of all positive integers of the original array.\n[1, 2, -4, 5, -1, -16, 2] -\u0026gt; [1, 2, 5, 2] [2.2] In the previously defined CSArrays class, write a static method called FilterEven that takes an array of integers and returns new array that consists of all even integers of the original array.\n[1, 2, -4, 5, -1, -16, 2] -\u0026gt; [2, -4, -16, 2] Now, we could make these a bit more general, so that we don\u0026rsquo;t have a write a new function for every single usecase.\n[2.3] In 2.1 you wrote a method FilterPositive, now write a new static method FilterBySign that takes an array of ints and an integer that can be 1 or -1. If it is 1 filter all positive elements otherwise all negatives.\n([1, 2, -3, 12, -1, 3], 1) -\u0026gt; [1, 2, 3] ([1, 2, -3, 12, -1, 3], -1) -\u0026gt; [-3, -1] "},{"id":3,"href":"/docs/problems/oop/binary/","title":"Binary Numbers","section":"OOP","content":"Binary Numbers OOP #  "},{"id":4,"href":"/docs/math/algebra/logic/","title":"Logic","section":"Algebra","content":"Logic #  "},{"id":5,"href":"/docs/programming/mem_ptr/","title":"Pointers","section":"Programming","content":"Pointers #  This is one of the most cruical themes that we are going to cover in this material. Working with pointers / references is one the most common things in programming, whether it\u0026rsquo;s C++, C# or even JavaScript it is important to understand this topic.\n"},{"id":6,"href":"/docs/problems/beginner/p0/","title":"Practice 0","section":"Beginner","content":"Practice 0 #  "},{"id":7,"href":"/docs/welcome/","title":"Welcome","section":"Docs","content":"Introduction #  Ferre hinnitibus erat accipitrem dixi Troiae tollens #  Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\n Pedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret  Est simul fameque tauri qua ad #  Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol #  Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo;  Trepident sitimque #  Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":8,"href":"/docs/math/geometry/","title":"Geometry","section":"Math","content":"Geometry #  "},{"id":9,"href":"/docs/problems/beginner/arrays/","title":"Arrays","section":"Beginner","content":"Arrays #  In this practice we are going to cover some of the most often used algorithms to read, filter and transform the array according to our needs. We will assume that you already understand how arrays work, but a small reminder will be written here in the document.\nWe will start simple, and slowly work our way to more complex stuff. Once you are ready you can checkout more advanced practice here.\n Required knowledge #  In order to be able to complete this practice we will assume that you are familiar with core programing concepts variables, std in / out, data types, data types conversion, flow-control, loops, arrays, static methods and that you have acquired at least very basic algorithmic thinking and problem solving mindset.\n Recollection #  Let us recall the basics of how we work with the arrays. In the beginner practice we will keep things simple, and we will always work with simple types like int, char, string. Later on, we will also work with more complex user defined types (classes).\nTo declare an array of ints of size 10 we write\nint[] arr = new int[10]; In order to access the elements of the array we need to use index. First elemnent of the array has index 0, as arrays are indexed from 0 to length - 1.\narr[0] = 13; // -\u0026gt; assigns the first element of the array to be 13 Console.WriteLine(arr[0]); // -\u0026gt; prints the first element of the arr We can also declare an array by giving it elemnents rightaway:\nint[] arr = new int[] { 1, 2, 3, 4, 5 }; // Will create an array of size 5, with the given elements In order to acccess all elements more easily, we usually use loops. The following program prints all elements of the array\nfor (int i=0; i\u0026lt;arr.length; i++) { Console.WriteLine(arr[i]); } We can also use while loop\nint index = 0; while (index \u0026lt; arr.length) { Console.WriteLine(arr[index]); index++; } Tasks #   [1] Printing the arrays [1.1] Write a static method PrintArrLn that takes one argument an array of integers and prints the elements of the array. For the array [1, 2, 3, 4, 5] the method prints\n1 2 3 4 5 [1.2] Write a static method PrintArrHr that takes one argument an array of integers and prints the elements of the array. For the array [1, 2, 3, 4, 5] the method prints\n1 2 3 4 5 [1.3] Write a static method PrintArrHrRev that takes one argument an array of integers and prints the elements of the array. For the array [1, 2, 3, 4, 5] the method prints\n5 4 3 2 1 [1.4] Write a static method PrintArrPretty that takes one argument an array of integers and prints the elements of the array. For the array [1, 2, 3, 4, 5] the method prints\n[1, 2, 3, 4, 5] [1.5] Write a static method PrintArrRight that takes one argument an array of integers and prints the elements of the array. For the array [1, 2, 3, 4, 5] the method prints\n1 2 3 4 5 [1.6] Write a static method PrintArrLeft that takes one argument an array of integers and prints the elements of the array. For the array [1, 2, 3, 4, 5] the method prints\n 1 2 3 4 5 [1.7] Write a static method PrintArrBin that takes one argument an array of integers and prints the elements of the array.\nFor the array [1, 2, 3, 4, 5] the method prints\n1 5 2 4 3 For the array [1, 2, 3, 4] the method prints\n1 4 2 3 For the array [1, 2, 3] the method prints\n1 3 2   [1.1] Searching the arrays [1.1.1] Write a static method Exists that takes an array of integers and an element e and searches for the element in the array. If the element exists it should return true, otherwise false.\n([1, 2, 3, 4, 5], 2) -\u0026gt; true ([1, 2, 3, 4, 5], 1) -\u0026gt; true ([1, 2, 3, 4, 5], 7) -\u0026gt; false ([1, 2, 3, 4, 5], 4) -\u0026gt; true [1.1.2] Write a static method Contains that takes an array of integers and an element e and searches for the element in the array. If the element is found it should return its position, otherwise -1.\n([1, 2, 3, 4, 5], 2) -\u0026gt; 1 ([1, 2, 3, 4, 5], 1) -\u0026gt; 0 ([1, 2, 3, 4, 5], 7) -\u0026gt; -1 ([1, 2, 3, 4, 5], 4) -\u0026gt; 3   [2] Modifying the arrays [2.1] Write a static method AddOneToEach that takes an array of integers and adds 1 to every element. Print the array before and after to confirm that your method worked correctly. For the array [1, 2, 3] it should print [2, 3, 4].\n[2.2] Write a static method MultEachBy that takes an array of integers and an integer x and multiplies each element of the array by x. Method should print the multiplied array. Example\nIn: [1, 2, 3], 2 Out: [2, 4, 6] [2.3] Write a static method that takes an array of integers DivEachBy and an integer d and divides each element of the array by that integer. If d = 0 method should print the correct \u0026lsquo;division by zero\u0026rsquo; error message, otherwise, print the modified array.\nIn: [2, 4, 6], 2) Out: [1, 2, 3] In [1, 2, 3], 0 Out: ERR: division by zero.   [3] Sums, Products  So far our methods were taking the arrays, doing some modification, and we were expecting them just to print the result. In programming we usually do things a little different, we usually do not want to have methods print stuff, and modify stuff directly, but rather we want them returning the expected results. In this section we will change the approach a little bit. You will understand more why we do this in the advanced practice.\nLet\u0026rsquo;s recall some math theory about sums and products. The following formula is a way to write a sum of all the elements between i and n.\n$$ \\sum_{i=0}^{n} i $$\nLikewise, this formula is a product of all elements between i and n\n$$ \\prod_{i=1}^{n} i $$\nBut this is just a fancy, mathematical way to write a sum and product. All this says is that i is a variable which starts from 0 for sum or 1 for product, that has all the values from that start value up to n and all these values add or multiply to get the final result. Although this is fairly simple, and there is a detailed explanation in the numbers under Math, we can still observe examples.\n[E1] Sum from 0 to 5\n$$ \\sum_{i=0}^{5} i = 0 + 1 + 2 + 3 + 4 + 5 $$\nand likewise\n[E2] Product from 1 to 5\n$$ \\sum_{i=1}^{5} i = 1 * 2 * 3 * 4 * 5 $$\nfinally let us move to some tasks.\n[3.1] Write a static method ArrSum that takes an array of integers and computes the sum of the elements of that array, it should return the result. For example\n[1, 2, 3] -\u0026gt; 6 [ ] -\u0026gt; 0 [1] -\u0026gt; 1 [3.2] Write a static method ArrProd that takes an array of integers and computes the product of the elements of that array, it should return the result. For example\n[1, 0, 3] -\u0026gt; 0 [ ] -\u0026gt; 1 [1] -\u0026gt; 1 [1, 2, 3] -\u0026gt; 6 [3.3] Write a static method ArrSumEven that takes an array of integers and computes the sum of all even numbers of that array, it should return the result. For example\n[1, 0, 3] -\u0026gt; 0 [ ] -\u0026gt; 0 [1] -\u0026gt; 0 [1, 2, 3] -\u0026gt; 2 [2, 2, 2] -\u0026gt; 6 [3.4] Write a static method ArrSumNonEven that takes an array of integers and computes the sum of all non-even numbers of that array, it should return the result. For example\n[1, 0, 3] -\u0026gt; 4 [ ] -\u0026gt; 0 [1] -\u0026gt; 1 [1, 2, 3] -\u0026gt; 4 [2, 2, 2] -\u0026gt; 0  "},{"id":10,"href":"/docs/math/algebra/functions/","title":"Functions","section":"Algebra","content":"Functions #  "},{"id":11,"href":"/docs/math/","title":"Math","section":"Docs","content":"Introduction #  Ferre hinnitibus erat accipitrem dixi Troiae tollens #  Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\n Pedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret  Est simul fameque tauri qua ad #  Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol #  Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo;  Trepident sitimque #  Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":12,"href":"/docs/dbs/","title":"Relational Databases","section":"Docs","content":"Introduction #  Ferre hinnitibus erat accipitrem dixi Troiae tollens #  Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\n Pedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret  Est simul fameque tauri qua ad #  Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol #  Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo;  Trepident sitimque #  Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":13,"href":"/docs/problems/beginner/binary/","title":"Binary Numbers","section":"Beginner","content":"Binary Numbers #  In this chapter we are going to implement methods that help us work with binary numbers. First we are going to read binary numbers as strings from STD input stream, and then we are going to validate these strings to make sure that the input is actually a binary number. After that we will be able to do more fun stuff, such as converting a binary number to a decimal and vice versa, and more.\n Required knowledge #  In order to be able to complete this practice we will assume that you are familiar with core programing concepts variables, std in / out, data types, data types conversion, flow-control, loops, arrays, static methods and that you have acquired at least very basic algorithmic thinking and problem solving mindset. For this particular practice we will also assume that you have read the corresponding theory Number and Binary Number System.\n The problems that we are going to solve here will serve as a starting point for later more complex OOP implementation of a library that will allow us to work with binary numbers. More complex practice regarding binary numbers can be found here.\nTasks #  [1] Write a static method called IsValidBinary that takes an argument of type string and verifies that the given string is actually a valid representation of a binary number. Method returns either true or false. Examples:\n1010 -\u0026gt; true 1111 -\u0026gt; true 1121 -\u0026gt; false 11b0 -\u0026gt; false 0000 -\u0026gt; true [2] Write a static method called ParseBinary that takes an argument of type string and converts the gien binary number into a decimal number. Make sure that the given argument is actually a binary number, in case it isn\u0026rsquo;t, method should return -1. Examples:\n0000 -\u0026gt; 0 0001 -\u0026gt; 1 0010 -\u0026gt; 2 0011 -\u0026gt; 3 0100 -\u0026gt; 4 1000 -\u0026gt; 8 0012 -\u0026gt; -1 00b0 -\u0026gt; -1 "},{"id":14,"href":"/docs/programming/","title":"Programming","section":"Docs","content":"Introduction #  Ferre hinnitibus erat accipitrem dixi Troiae tollens #  Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\n Pedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret  Est simul fameque tauri qua ad #  Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol #  Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo;  Trepident sitimque #  Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":15,"href":"/docs/math/algebra/relations/","title":"Relations","section":"Algebra","content":"Relations #  "},{"id":16,"href":"/docs/math/algebra/numbers/","title":"Numbers","section":"Algebra","content":"Number Systems #  "},{"id":17,"href":"/docs/math/algebra/binary/","title":"Binary Number System","section":"Algebra","content":"Binary Number System #  "},{"id":18,"href":"/docs/problems/","title":"Programming Practice","section":"Docs","content":"Introduction #  Ferre hinnitibus erat accipitrem dixi Troiae tollens #  Lorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\n Pedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret  Est simul fameque tauri qua ad #  Locum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol #  Nec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo;  Trepident sitimque #  Sentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":19,"href":"/posts/hello-world/","title":"Hello world!","section":"Blog","content":"\u0026ldquo;Hello world!\u0026rdquo; is a phrase that usually begins every programming tutorial or course out there. A program that prints this message on screen is typically the first program you will ever write when you start learning programming. As this is my first blog post I decided to follow that tradition here as well.\nWhether you are an absolute beginner, computer science student or an already formed programmer I believe the material written here will be helpful for you. Although the main goal of this website is to help complete beginners learn programming, we will cover some more advanced topic here as well, providing both theory and practice.\nWhat\u0026rsquo;s up with Computer Science 101? #  What can I expect? #  How can I support? #  "},{"id":20,"href":"/docs/programming/setup/dotnet/","title":"[C#] Linux, MacOS","section":"Setup","content":".NET Setup #  "},{"id":21,"href":"/docs/programming/setup/vs/","title":"[C#] Visual Studio","section":"Setup","content":"Visual Studio Setup #  "},{"id":22,"href":"/docs/programming/setup/cpp/","title":"[C++] Linux, MacOS","section":"Setup","content":"C++ setup on Linux and MacOS #  Linux #  MacOS #  "},{"id":23,"href":"/docs/programming/setup/vscpp/","title":"[C++] Visual Studio","section":"Setup","content":"Visual Studio Setup #  "},{"id":24,"href":"/docs/programming/mem_ptr/refcsharp/","title":"C# References","section":"Pointers","content":"C# References #  References.\n"},{"id":25,"href":"/docs/programming/mem_ptr/pointerscpp/","title":"C++ Pointers","section":"Pointers","content":"C++ Pointers #  We have worked in C# so far, so you may wonder why C++ all of a sudden? The answer is simple, C# will allow us to work with references / pointers, however it will hide some details from us. To discover these details and to make things more clear, but also more confusing at first, we want to dive in and take a short detour to C++ to explore this subject in depth.\nI promise, this will be very useful if understood correctly. It will take more time, and it is a bit more complex and requires some additional brain gymnastics but if you take the time to learn it now, you will never again have issues when working with references / pointers in any language. I have chosen C++ for this part, because the syntax is fairly similar to that of C# in most cases and because C++ setup is pretty straight-forward on all OSs.\n"}]